{"version":3,"sources":["components/AddTodo.js","components/Header.js","components/Todo.js","components/List.js","components/Indicators.js","components/TodoAddedNotification.js","App.js","index.js"],"names":["AddTodo","addTodo","useState","value","setValue","addNewTodo","className","onKeyPress","e","key","type","onChange","inputEvent","target","placeholder","onClick","disabled","Header","Todo","id","name","completed","deleteTodo","markTodoAsCompleted","done","checked","List","todos","listItems","map","todo","length","Indicators","nTodos","nCompleted","percent","progressStyle","width","role","style","toFixed","display","position","top","right","TodoAddedNotification","setShow","useEffect","setTimeout","App","JSON","parse","localStorage","getItem","setTodos","showNotification","setShowNotification","saveTodos","setItem","stringify","reduce","n","newTodos","filter","ReactDOM","render","document","querySelector"],"mappings":"4MA4CeA,EArCC,SAAC,GAEV,IADHC,EACE,EADFA,QAEA,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAOMC,EAAa,WACD,KAAVF,IACAF,EAAQE,GACRC,EAAS,MAQjB,OACI,qBAAKE,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SACI,sBAAKA,UAAU,cAAcC,WAnBlB,SAACC,GACN,UAAVA,EAAEC,KACFJ,KAiBI,UACI,uBAAOK,KAAK,OAAOP,MAAOA,EAAOQ,SARtB,SAACC,GACxBR,EAASQ,EAAWC,OAAOV,QAOgDG,UAAU,eAAeQ,YAAY,gBAAgB,aAAW,kBAC/H,sBAAMR,UAAU,kBAAhB,SACI,wBAAQA,UAAU,kBAAkBI,KAAK,SAASK,QAASV,EAAYW,UAAWb,EAAlF,2BCvBTc,EATA,kBAEX,qBAAKX,UAAU,sDAAf,SACI,qBAAKA,UAAU,2CAAf,SACI,sBAAMA,UAAU,OAAhB,wCCqDGY,EA5CF,SAAC,GAMP,IALHC,EAKE,EALFA,GACAC,EAIE,EAJFA,KACAC,EAGE,EAHFA,UACAC,EAEE,EAFFA,WACAC,EACE,EADFA,oBAQMC,EAAOH,EAAa,8BAAMD,IAAeA,EAE/C,OAEI,oBAAId,UAAU,kBAAd,SAEI,sBAAKA,UAAU,MAAf,UAEI,sBAAKA,UAAU,iBAAf,UACI,wBAAOA,UAAU,sDAAjB,UACI,uBAAOI,KAAK,WAAWe,QAASJ,EAAWf,UAAU,uBAAuBK,SAfjE,WAC3BY,EAAoBJ,MAeJ,sBAAMb,UAAU,gCAEpB,qBAAKA,UAAU,gBAKnB,qBAAKA,UAAU,iBAAf,SACKkB,IAGL,qBAAKlB,UAAU,4CAAf,SACI,wBAAQI,KAAK,SAASJ,UAAU,wBAAwBS,QAAS,kBAAMO,EAAWH,IAAlF,4BCRLO,EA3BF,SAAC,GAAqD,IAAD,IAAlDC,aAAkD,MAA1C,GAA0C,EAAtCL,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,oBAC9BK,EAAYD,EAAME,KAAI,SAACC,GAAD,OACxB,cAAC,EAAD,CAEIX,GAAIW,EAAKX,GACTC,KAAMU,EAAKV,KACXC,UAAWS,EAAKT,UAEhBC,WAAYA,EACZC,oBAAqBA,GANhBO,EAAKX,OAUlB,OACI,mCACMQ,EAAMI,OACJ,oBAAIzB,UAAU,aAAd,SACKsB,IAGL,mBAAGtB,UAAU,gBAAb,4FCgBD0B,EA5CI,SAAC,GAAoC,IAAD,IAAjCC,cAAiC,MAAxB,EAAwB,MAArBC,kBAAqB,MAAR,EAAQ,EAC7CC,EAAYD,EAAaD,EAAU,KAAQ,EAE3CG,EAAgB,CAClBC,MAAM,GAAD,OAAKF,EAAL,MAGT,OACI,qBAAK7B,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAIA,UAAU,aAAd,8BAA6C4B,KAC7C,qBAAK5B,UAAU,gBAAf,SACI,sBACIA,UAAU,0DACVgC,KAAK,cACL,gBAAeH,EACf,gBAAc,IACd,gBAAc,MACdI,MAAOH,EANX,UAQKD,EAAQK,QAAQ,GARrB,gBAchB,qBAAKlC,UAAU,WAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,yBACA,mBAAGA,UAAU,YAAb,SAA0B2B,iBCtChDM,EAAQ,CACVE,QAAS,UACTC,SAAU,QACVC,IAAK,GACLC,MAAO,IAyBIC,EAlBe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAI7B,OAFAC,qBAAU,kBAAMC,YAAW,kBAAMF,GAAQ,KAAQ,OAAO,CAACA,IAGrD,qBAAKP,MAAOA,EAAOjC,UAAU,0DAA0DgC,KAAK,QAAQ,YAAU,YAAY,cAAY,OAAtI,SACI,sBAAKhC,UAAU,SAAf,UACI,qBAAKA,UAAU,aAAf,wDAGA,wBAAQS,QAAS,kBAAM+B,GAAQ,IAAQpC,KAAK,SAASJ,UAAU,wCAAwC,aAAW,gBC8DnH2C,EA9EH,WACR,MAA0B/C,oBAAS,WAE/B,OAD0BgD,KAAKC,MAAMC,aAAaC,QAAQ,WAC9B,MAFhC,mBAAO1B,EAAP,KAAc2B,EAAd,KAKA,EAAgDpD,oBAAS,GAAzD,mBAAOqD,EAAP,KAAyBC,EAAzB,KAEMC,EAAY,SAAC9B,GACfyB,aAAaM,QAAQ,QAASR,KAAKS,UAAUhC,KAmDjD,OACI,gCACI,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,CAAYO,WARTP,EAAMiC,QAAO,SAACC,EAAG/B,GAAJ,OAAa+B,EAAK/B,EAAKT,YAAY,GAQNY,OAAQN,EAAMI,SAC3D,uBACA,sBAAKzB,UAAU,YAAf,UACI,cAAC,EAAD,CAASL,QAlDL,SAACmB,GACb,IAAMD,EAAKQ,EAAMI,OAAUJ,EAAMA,EAAMI,OAAS,GAAGZ,GAAK,EAAK,EACvD2C,EAAQ,sBAAOnC,GAAP,CAAc,CAAER,KAAIC,OAAMC,WAAW,KACnDiC,EAASQ,GACTL,EAAUK,GACVN,GAAoB,MA8CZ,uBACA,cAAC,EAAD,CAAMlC,WAvCC,SAACH,GAChB,IAAM2C,EAAWnC,EAAMoC,QAAO,SAAAjC,GAAI,OAAIA,EAAKX,KAAOA,KAClDmC,EAASQ,GACTL,EAAUK,IAoC4BnC,MAAOA,EAAOJ,oBA5B5B,SAACJ,GACzB,IAAM2C,EAAWnC,EAAME,KAAI,SAAAC,GAAI,OAAIA,EAAKX,KAAOA,EAAZ,2BAAsBW,GAAtB,IAA4BT,WAAYS,EAAKT,YAAcS,KAC9FwB,EAAS,YAAIQ,IACbL,EAAUK,MA0BF,0BAEHP,GAAoB,cAAC,EAAD,CAAuBT,QAASU,Q,MCvEjEQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.34db76b0.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst propTypes = {\r\n    addTodo: PropTypes.func\r\n}\r\n\r\nconst AddTodo = ({\r\n    addTodo\r\n}) => {\r\n    const [value, setValue] = useState('')\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter')\r\n            addNewTodo()\r\n    }\r\n\r\n    const addNewTodo = () => {\r\n        if (value !== '') {\r\n            addTodo(value);\r\n            setValue('')\r\n        }\r\n    }\r\n\r\n    const inputChangeHandler = (inputEvent) => {\r\n        setValue(inputEvent.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12\">\r\n                <div className=\"input-group\" onKeyPress={handleKeyPress}>\r\n                    <input type=\"text\" value={value} onChange={inputChangeHandler} className=\"form-control\" placeholder=\"Add a task...\" aria-label=\"Add a task...\" />\r\n                    <span className=\"input-group-btn\">\r\n                        <button className=\"btn btn-primary\" type=\"button\" onClick={addNewTodo} disabled={!value}>Add</button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nAddTodo.propTypes = propTypes\r\nexport default AddTodo\r\n\r\n","import React from 'react';\r\n\r\nconst Header = () => (\r\n    \r\n    <nav className=\"navbar navbar-light bg-light justify-content-center\">\r\n        <div className=\"d-flex align-items-center container-full\">\r\n            <span className='fs-5'>üìã My tasks</span>\r\n        </div>\r\n    </nav>\r\n)\r\n\r\nexport default Header;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst propTypes = {\r\n    id: PropTypes.oneOfType([\r\n        PropTypes.number,\r\n        PropTypes.string\r\n    ]),\r\n    name: PropTypes.string,\r\n    completed: PropTypes.bool,\r\n\r\n    deleteTodo: PropTypes.func,\r\n    markTodoAsCompleted: PropTypes.func,\r\n}\r\n\r\nconst Todo = ({\r\n    id,\r\n    name,\r\n    completed,\r\n    deleteTodo,\r\n    markTodoAsCompleted\r\n}) => {\r\n\r\n    const markCurrentAsCompleted = () => {\r\n        markTodoAsCompleted(id)\r\n    }\r\n\r\n\r\n    const done = completed ? (<del>{name}</del>) : name\r\n\r\n    return (\r\n\r\n        <li className=\"list-group-item\">\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-1 col-lg-1\">\r\n                    <label className=\"custom-control custom-checkbox mb-2 mr-sm-2 mb-sm-0\">\r\n                        <input type=\"checkbox\" checked={completed} className=\"custom-control-input\" onChange={markCurrentAsCompleted} />\r\n                        <span className=\"custom-control-indicator\"></span>\r\n                    </label>\r\n                    <div className=\"contaner\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-6 col-lg-6\">\r\n                    {done}\r\n                </div>\r\n\r\n                <div className=\"col-5 col-lg-5 d-flex justify-content-end\">\r\n                    <button type=\"button\" className=\"btn btn-danger btn-sm\" onClick={() => deleteTodo(id)}>Delete</button>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nTodo.propTypes = propTypes\r\nexport default Todo\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Todo from './Todo'\r\n\r\nconst propTypes = {\r\n    todos: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number,\r\n            name: PropTypes.string,\r\n            completed: PropTypes.bool\r\n        })\r\n    ),\r\n    deleteTodo: PropTypes.func,\r\n    markTodoAsCompleted: PropTypes.func\r\n}\r\n\r\nconst List = ({ todos = [], deleteTodo, markTodoAsCompleted }) => {\r\n    const listItems = todos.map((todo) => (\r\n        <Todo\r\n            key={todo.id}\r\n            id={todo.id}\r\n            name={todo.name}\r\n            completed={todo.completed}\r\n\r\n            deleteTodo={deleteTodo}\r\n            markTodoAsCompleted={markTodoAsCompleted}\r\n        />\r\n    ));\r\n\r\n    return (\r\n        <>\r\n            { todos.length ?\r\n                <ul className=\"list-group\">\r\n                    {listItems}\r\n                </ul> :\r\n\r\n                <p className='text-black-50'>No things todo available, add one by typing on the above field ‚¨ÜÔ∏è</p>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nList.propTypes = propTypes;\r\nexport default List;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst propTypes = {\r\n    nTodos: PropTypes.number,\r\n    nCompleted: PropTypes.number\r\n}\r\n\r\nconst Indicators = ({ nTodos = 0, nCompleted = 0 }) => {\r\n    const percent = ((nCompleted / nTodos) * 100) || 0;\r\n\r\n    const progressStyle = {\r\n        width: `${percent}%`,\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"card mb-1\">\r\n                        <div className=\"card-body\">\r\n                            <h4 className=\"card-title\">Completed tasks: {nCompleted}</h4>\r\n                            <div className=\"progress mb-2\">\r\n                                <div\r\n                                    className=\"progress-bar progress-bar-striped progress-bar-animated\"\r\n                                    role=\"progressbar\"\r\n                                    aria-valuenow={percent}\r\n                                    aria-valuemin=\"0\"\r\n                                    aria-valuemax=\"100\"\r\n                                    style={progressStyle}\r\n                                >\r\n                                    {percent.toFixed(1)}%\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"card mb-1\">\r\n                        <div className=\"card-body\">\r\n                            <h4 className=\"card-title\">Total tasks</h4>\r\n                            <p className=\"card-text\">{nTodos}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nIndicators.propTypes = propTypes\r\nexport default Indicators\r\n","import { useEffect } from \"react\"\r\nimport PropTypes from 'prop-types'\r\n\r\nconst style = {\r\n    display: 'inherit',\r\n    position: 'fixed',\r\n    top: 30,\r\n    right: 10\r\n}\r\n\r\nconst propTypes = {\r\n    setShow: PropTypes.func\r\n}\r\n\r\nconst TodoAddedNotification = ({ setShow }) => {\r\n\r\n    useEffect(() => setTimeout(() => setShow(false), 2000), [setShow])\r\n\r\n    return (\r\n        <div style={style} className=\"toast align-items-center text-white bg-primary border-0\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\r\n            <div className=\"d-flex\">\r\n                <div className=\"toast-body\">\r\n                    Successfully added a new task to the list.\r\n                </div>\r\n                <button onClick={() => setShow(false)} type=\"button\" className=\"btn-close btn-close-white me-2 m-auto\" aria-label=\"Close\"></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nTodoAddedNotification.propTypes = propTypes\r\nexport default TodoAddedNotification\r\n","import React, { useState } from 'react';\r\n\r\nimport AddTodo from './components/AddTodo';\r\nimport Header from './components/Header';\r\nimport List from './components/List';\r\nimport Indicators from './components/Indicators';\r\nimport TodoAddedNotification from './components/TodoAddedNotification';\r\n\r\nconst App = () => {\r\n    const [todos, setTodos] = useState(() => {\r\n        const localStorageTodos = JSON.parse(localStorage.getItem('todos'))\r\n        return localStorageTodos || []\r\n    })\r\n\r\n    const [showNotification, setShowNotification] = useState(false)\r\n\r\n    const saveTodos = (todos) => {\r\n        localStorage.setItem('todos', JSON.stringify(todos));\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param {string} name \r\n     */\r\n    const addTodo = (name) => {\r\n        const id = todos.length ? (todos[todos.length - 1].id + 1) : 1\r\n        const newTodos = [...todos, { id, name, completed: false }]\r\n        setTodos(newTodos)\r\n        saveTodos(newTodos)\r\n        setShowNotification(true)\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param {number | string} id \r\n     */\r\n    const deleteTodo = (id) => {\r\n        const newTodos = todos.filter(todo => todo.id !== id)\r\n        setTodos(newTodos)\r\n        saveTodos(newTodos)\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param {number | string} id \r\n     */\r\n    const markTodoAsCompleted = (id) => {\r\n        const newTodos = todos.map(todo => todo.id === id ? { ...todo, completed: !todo.completed } : todo)\r\n        setTodos([...newTodos])\r\n        saveTodos(newTodos)\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @returns {{\r\n     *    id: number | string,\r\n     *    name: string,\r\n     *    completed: boolean\r\n     * }}\r\n     */\r\n    const getCompletedTodos = () => {\r\n        return todos.reduce((n, todo) => n + (todo.completed), 0)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <br />\r\n            <Indicators nCompleted={getCompletedTodos()} nTodos={todos.length} />\r\n            <br />\r\n            <div className=\"container\">\r\n                <AddTodo addTodo={addTodo} />\r\n                <br />\r\n                <List deleteTodo={deleteTodo} todos={todos} markTodoAsCompleted={markTodoAsCompleted} />\r\n                <br />\r\n            </div>\r\n            {showNotification && <TodoAddedNotification setShow={setShowNotification} />}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nimport './dependencies/bootstrap/css/bootstrap.min.css'\r\n\r\n/* Take this component's generated HTML and put it on the page (in the DOM) */\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}